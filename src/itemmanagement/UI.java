/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package itemmanagement;

/**
 *
 * @author nixon
 */
import javax.swing.table.*;
import javax.swing.*;
import java.awt.*;
import java.util.List;

public class UI extends javax.swing.JFrame {

    private DefaultTableModel model;
    private ItemManagement itemOps;

    
    public UI() {
        initComponents();
        // - - - - - RESIZE ICON ADD - - - - - //
        ImageIcon addIcon = new ImageIcon(getClass().getResource("/resources/icons/Add.png"));
        Image scaled_add = addIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedAdd = new ImageIcon(scaled_add);
        add_Button.setIcon(resizedAdd);
         // - - - - - RESIZE ICON DELETE - - - - - //
        ImageIcon deleteIcon = new ImageIcon(getClass().getResource("/resources/icons/Delete.png"));
        Image scaled_delete = deleteIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedDelete = new ImageIcon(scaled_delete);
        delete_Button.setIcon(resizedDelete);
         // - - - - - RESIZE ICON UPDATE - - - - - //
        ImageIcon updateIcon = new ImageIcon(getClass().getResource("/resources/icons/Update.png"));
        Image scaled_update = updateIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedUpdate = new ImageIcon(scaled_update);
        update_Button.setIcon(resizedUpdate);
         // - - - - - RESIZE ICON REFRESH - - - - - //
        ImageIcon refreshIcon = new ImageIcon(getClass().getResource("/resources/icons/Refresh.png"));
        Image scaled_refresh = refreshIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedRefresh = new ImageIcon(scaled_refresh);
        refresh_Button.setIcon(resizedRefresh);
         // - - - - - RESIZE ICON CLEAN - - - - - //
         ImageIcon cleanIcon = new ImageIcon(getClass().getResource("/resources/icons/Clean.png"));
        Image scaled_clean = cleanIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedClean = new ImageIcon(scaled_clean);
        clean_Button.setIcon(resizedClean);
        
        //----- Clear the comboBox when run the program -----//
        supplierID_comboBox.setSelectedIndex(-1);
        supplierName_comboBox.setSelectedIndex(-1);
        
        model = new DefaultTableModel(
            new Object[]{"No.", "Item Name", "Item Code", "Supplier ID", "Supplier Name", "Category", "Unit Price", "Description"}, 0  ) {
            
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; //----- All column is non-editable -----//
            }
        };

        itemTable.setModel(model); 

        //----- Initialize ItemManagement with necessary components -----//
        itemOps = new ItemManagement(
            itemTable,
            itemName_textbox,
            itemCode_textbox,
            supplierID_comboBox,
            supplierName_comboBox,
            category_textbox,
            unitPrice_textbox,
            description_textbox
        );

        //----- Double click the row to edit then put to textbox / comboBox -----//
        itemOps.doubleClickRow();
        
        //----- Load data into table and update the comboBox -----//
        itemOps.refresh();
        updateFilterComboBox();
        
        //----- Add action listener to filter combo box -----//
       filter_comboBox = new JComboBox<>();
        updateFilterComboBox();
        filter_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_comboBoxActionPerformed(evt);
            }
        });

        
    TableRowSorter<TableModel> sorter = new TableRowSorter<>(itemTable.getModel());
        itemTable.setRowSorter(sorter);
        for (int i = 0; i < itemTable.getColumnCount(); i++) {
            sorter.setSortable(i, false);
        }
    }
    
    // - - - - -  Method to update the filter combo box with categories - - - - - //
    public void updateFilterComboBox() {
        filter_comboBox.removeAllItems();
        filter_comboBox.addItem("All");
        List<String> categories = itemOps.updateFilter();
        for (String category : categories) {
            filter_comboBox.addItem(category);
        }
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add_Button = new javax.swing.JButton();
        delete_Button = new javax.swing.JButton();
        clean_Button = new javax.swing.JButton();
        update_Button = new javax.swing.JButton();
        NAVPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        item_Button = new javax.swing.JButton();
        po_Button = new javax.swing.JButton();
        itemCode_textbox = new javax.swing.JTextField();
        category_textbox = new javax.swing.JTextField();
        unitPrice_textbox = new javax.swing.JTextField();
        description_textbox = new javax.swing.JTextField();
        itemName_textbox = new javax.swing.JTextField();
        itemCode_lbl = new javax.swing.JLabel();
        itemName_lbl = new javax.swing.JLabel();
        supplierID_lbl = new javax.swing.JLabel();
        category_lbl = new javax.swing.JLabel();
        unitPrice_lbl = new javax.swing.JLabel();
        description_lbl = new javax.swing.JLabel();
        supplierName_lbl = new javax.swing.JLabel();
        refresh_Button = new javax.swing.JButton();
        supplierID_comboBox = new javax.swing.JComboBox<>();
        supplierName_comboBox = new javax.swing.JComboBox<>();
        itemTableScrollPane = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        filter_comboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(java.awt.Color.white);

        add_Button.setBackground(new java.awt.Color(120, 211, 77));
        add_Button.setForeground(new java.awt.Color(0, 0, 0));
        add_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/Add.png"))); // NOI18N
        add_Button.setBorder(null);
        add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_ButtonActionPerformed(evt);
            }
        });

        delete_Button.setBackground(new java.awt.Color(251, 82, 35));
        delete_Button.setForeground(new java.awt.Color(0, 0, 0));
        delete_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/Delete.png"))); // NOI18N
        delete_Button.setBorder(null);
        delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_ButtonActionPerformed(evt);
            }
        });

        clean_Button.setBackground(new java.awt.Color(240, 225, 0));
        clean_Button.setForeground(new java.awt.Color(0, 0, 0));
        clean_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/Clean.png"))); // NOI18N
        clean_Button.setBorder(null);
        clean_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clean_ButtonActionPerformed(evt);
            }
        });

        update_Button.setBackground(new java.awt.Color(76, 134, 168));
        update_Button.setForeground(new java.awt.Color(0, 0, 0));
        update_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/Update.png"))); // NOI18N
        update_Button.setBorder(null);
        update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_ButtonActionPerformed(evt);
            }
        });

        NAVPanel.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("NAV BAR");

        item_Button.setBackground(new java.awt.Color(255, 255, 204));
        item_Button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        item_Button.setForeground(new java.awt.Color(0, 0, 0));
        item_Button.setText("Item");
        item_Button.setBorderPainted(false);
        item_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                item_ButtonActionPerformed(evt);
            }
        });

        po_Button.setBackground(new java.awt.Color(255, 255, 204));
        po_Button.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        po_Button.setForeground(new java.awt.Color(0, 0, 0));
        po_Button.setText("Purchase Order");
        po_Button.setBorderPainted(false);

        javax.swing.GroupLayout NAVPanelLayout = new javax.swing.GroupLayout(NAVPanel);
        NAVPanel.setLayout(NAVPanelLayout);
        NAVPanelLayout.setHorizontalGroup(
            NAVPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(item_Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(po_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
            .addGroup(NAVPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        NAVPanelLayout.setVerticalGroup(
            NAVPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NAVPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(92, 92, 92)
                .addComponent(item_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(po_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        itemName_textbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemName_textboxActionPerformed(evt);
            }
        });

        itemCode_lbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        itemCode_lbl.setText("Item Code");

        itemName_lbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        itemName_lbl.setText("Item Name");

        supplierID_lbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        supplierID_lbl.setText("Supplier ID");

        category_lbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        category_lbl.setText("Category");

        unitPrice_lbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        unitPrice_lbl.setText("Unit Price");

        description_lbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        description_lbl.setText("Description");

        supplierName_lbl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        supplierName_lbl.setText("Supplier Name");

        refresh_Button.setBackground(new java.awt.Color(216, 212, 213));
        refresh_Button.setForeground(new java.awt.Color(0, 0, 0));
        refresh_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/Refresh.png"))); // NOI18N
        refresh_Button.setBorder(null);
        refresh_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_ButtonActionPerformed(evt);
            }
        });

        supplierID_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SUP0001", "SUP0002", "SUP0003" }));

        supplierName_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nelson Tan", "Ho Lee Sheet", "Lee Kim Keong", " " }));

        itemTableScrollPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTableScrollPaneMouseClicked(evt);
            }
        });

        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Item Name", "Item Code", "Supplier ID", "Supplier Name", "Category", "Unit Price", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTableScrollPane.setViewportView(itemTable);

        filter_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filter_comboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(NAVPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filter_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(supplierID_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(itemCode_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(itemName_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(category_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(unitPrice_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(description_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(supplierName_lbl, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(itemCode_textbox, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemName_textbox, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(category_textbox, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(unitPrice_textbox, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(description_textbox, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(supplierID_comboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(supplierName_comboBox, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refresh_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clean_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(39, 39, 39)
                .addComponent(itemTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NAVPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(filter_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemName_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemName_lbl))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(itemCode_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemCode_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplierID_lbl)
                            .addComponent(supplierID_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplierName_lbl)
                            .addComponent(supplierName_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(category_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(category_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unitPrice_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unitPrice_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(description_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(description_lbl))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(clean_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(refresh_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(delete_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(146, 146, 146))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(itemTableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void item_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_item_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_item_ButtonActionPerformed

    private void itemName_textboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemName_textboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemName_textboxActionPerformed

//- - - - - - - - - - ADD FUNCTION - - - - - - - - - -//
    private void add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_ButtonActionPerformed
        itemOps.add();
        updateFilterComboBox();
    }//GEN-LAST:event_add_ButtonActionPerformed

//- - - - - - - - - - REFRESH FUNCTION - - - - - - - - - -//
    private void refresh_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_ButtonActionPerformed
        itemOps.refresh();
        updateFilterComboBox();
    }//GEN-LAST:event_refresh_ButtonActionPerformed

//- - - - - - - - - - DELETE FUNCTION - - - - - - - - - -//
    private void delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_ButtonActionPerformed
        itemOps.delete();
        updateFilterComboBox();
    }//GEN-LAST:event_delete_ButtonActionPerformed

//- - - - - - - - - - CLEAN FUNCTION - - - - - - - - - -//
    private void clean_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clean_ButtonActionPerformed
        itemOps.clean();
    }//GEN-LAST:event_clean_ButtonActionPerformed

    private void itemTableScrollPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTableScrollPaneMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_itemTableScrollPaneMouseClicked
   
    //- - - - - - - - - - UPDATE FUNCTION - - - - - - - - - -//
    private void update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_ButtonActionPerformed
        itemOps.update();
    }//GEN-LAST:event_update_ButtonActionPerformed

    
      //- - - - - - - - - - FILTER COMBOBOX FUNCTION - - - - - - - - - -//
    private void filter_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filter_comboBoxActionPerformed
        if (evt.getSource() == filter_comboBox) {
            String selectedCategory = (String) filter_comboBox.getSelectedItem();
            if (selectedCategory != null) {
                System.out.println("Filtering by: " + selectedCategory);
                itemOps.filter(selectedCategory);
            }
        }
    }//GEN-LAST:event_filter_comboBoxActionPerformed

    
    

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  ENDS HERE  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  //
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel NAVPanel;
    private javax.swing.JButton add_Button;
    private javax.swing.JLabel category_lbl;
    private javax.swing.JTextField category_textbox;
    private javax.swing.JButton clean_Button;
    private javax.swing.JButton delete_Button;
    private javax.swing.JLabel description_lbl;
    private javax.swing.JTextField description_textbox;
    private javax.swing.JComboBox<String> filter_comboBox;
    private javax.swing.JLabel itemCode_lbl;
    private javax.swing.JTextField itemCode_textbox;
    private javax.swing.JLabel itemName_lbl;
    private javax.swing.JTextField itemName_textbox;
    private javax.swing.JTable itemTable;
    private javax.swing.JScrollPane itemTableScrollPane;
    private javax.swing.JButton item_Button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton po_Button;
    private javax.swing.JButton refresh_Button;
    private javax.swing.JComboBox<String> supplierID_comboBox;
    private javax.swing.JLabel supplierID_lbl;
    private javax.swing.JComboBox<String> supplierName_comboBox;
    private javax.swing.JLabel supplierName_lbl;
    private javax.swing.JLabel unitPrice_lbl;
    private javax.swing.JTextField unitPrice_textbox;
    private javax.swing.JButton update_Button;
    // End of variables declaration//GEN-END:variables
}
